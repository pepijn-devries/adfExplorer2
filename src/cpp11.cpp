// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// block_adf.h
SEXP read_adf_block(SEXP connection, int sector);
extern "C" SEXP _adfExplorer2_read_adf_block(SEXP connection, SEXP sector) {
  BEGIN_CPP11
    return cpp11::as_sexp(read_adf_block(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(sector)));
  END_CPP11
}
// block_adf.h
SEXP write_adf_block(SEXP connection, int sector, raws block);
extern "C" SEXP _adfExplorer2_write_adf_block(SEXP connection, SEXP sector, SEXP block) {
  BEGIN_CPP11
    return cpp11::as_sexp(write_adf_block(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(sector), cpp11::as_cpp<cpp11::decay_t<raws>>(block)));
  END_CPP11
}
// block_adf.h
list interpret_root_header(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_interpret_root_header(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(interpret_root_header(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// block_adf.h
list interpret_file_header(SEXP connection, int vol_num, int sectnum);
extern "C" SEXP _adfExplorer2_interpret_file_header(SEXP connection, SEXP vol_num, SEXP sectnum) {
  BEGIN_CPP11
    return cpp11::as_sexp(interpret_file_header(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num), cpp11::as_cpp<cpp11::decay_t<int>>(sectnum)));
  END_CPP11
}
// block_adf.h
list interpret_dir_header(SEXP connection, int vol_num, int sectnum);
extern "C" SEXP _adfExplorer2_interpret_dir_header(SEXP connection, SEXP vol_num, SEXP sectnum) {
  BEGIN_CPP11
    return cpp11::as_sexp(interpret_dir_header(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num), cpp11::as_cpp<cpp11::decay_t<int>>(sectnum)));
  END_CPP11
}
// connect_adf.cpp
SEXP adf_check_file_reg(SEXP con, int file_header);
extern "C" SEXP _adfExplorer2_adf_check_file_reg(SEXP con, SEXP file_header) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_check_file_reg(cpp11::as_cpp<cpp11::decay_t<SEXP>>(con), cpp11::as_cpp<cpp11::decay_t<int>>(file_header)));
  END_CPP11
}
// connect_adf.h
SEXP connect_adf_(cpp11::strings filename, bool write_protected);
extern "C" SEXP _adfExplorer2_connect_adf_(SEXP filename, SEXP write_protected) {
  BEGIN_CPP11
    return cpp11::as_sexp(connect_adf_(cpp11::as_cpp<cpp11::decay_t<cpp11::strings>>(filename), cpp11::as_cpp<cpp11::decay_t<bool>>(write_protected)));
  END_CPP11
}
// dev_format.h
SEXP adf_dev_format(SEXP connection, SEXP name, cpp11::logicals ffs, cpp11::logicals intl, cpp11::logicals dircache);
extern "C" SEXP _adfExplorer2_adf_dev_format(SEXP connection, SEXP name, SEXP ffs, SEXP intl, SEXP dircache) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_dev_format(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<SEXP>>(name), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(ffs), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(intl), cpp11::as_cpp<cpp11::decay_t<cpp11::logicals>>(dircache)));
  END_CPP11
}
// dev_info.h
cpp11::r_string adf_dev_name(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_dev_name(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_dev_name(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
int adf_dev_size(SEXP connection);
extern "C" SEXP _adfExplorer2_adf_dev_size(SEXP connection) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_dev_size(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection)));
  END_CPP11
}
// dev_info.h
int adf_dev_nvol(SEXP connection);
extern "C" SEXP _adfExplorer2_adf_dev_nvol(SEXP connection) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_dev_nvol(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection)));
  END_CPP11
}
// dev_info.h
cpp11::r_string adf_dev_type(SEXP connection);
extern "C" SEXP _adfExplorer2_adf_dev_type(SEXP connection) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_dev_type(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection)));
  END_CPP11
}
// dev_info.h
int adf_free_blocks(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_free_blocks(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_free_blocks(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
int adf_block_size(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_block_size(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_block_size(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
int adf_vol_size(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_vol_size(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_vol_size(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
cpp11::r_bool adf_is_write_protected(SEXP connection);
extern "C" SEXP _adfExplorer2_adf_is_write_protected(SEXP connection) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_is_write_protected(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection)));
  END_CPP11
}
// dev_info.h
cpp11::r_bool adf_is_bootable(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_is_bootable(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_is_bootable(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
cpp11::r_bool adf_is_intl(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_is_intl(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_is_intl(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
cpp11::r_bool adf_is_dircache(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_is_dircache(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_is_dircache(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// dev_info.h
cpp11::r_bool adf_is_ffs(SEXP connection, int vol_num);
extern "C" SEXP _adfExplorer2_adf_is_ffs(SEXP connection, SEXP vol_num) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_is_ffs(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num)));
  END_CPP11
}
// file_conn_adf.cpp
SEXP adf_file_con_(SEXP connection, cpp11::strings filename, bool writable);
extern "C" SEXP _adfExplorer2_adf_file_con_(SEXP connection, SEXP filename, SEXP writable) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_file_con_(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<cpp11::strings>>(filename), cpp11::as_cpp<cpp11::decay_t<bool>>(writable)));
  END_CPP11
}
// file_conn_adf.h
r_string adf_file_con_info(SEXP connection);
extern "C" SEXP _adfExplorer2_adf_file_con_info(SEXP connection) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_file_con_info(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection)));
  END_CPP11
}
// file_info_adf.h
r_string adf_upper(strings x, logicals intl);
extern "C" SEXP _adfExplorer2_adf_upper(SEXP x, SEXP intl) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_upper(cpp11::as_cpp<cpp11::decay_t<strings>>(x), cpp11::as_cpp<cpp11::decay_t<logicals>>(intl)));
  END_CPP11
}
// file_info_adf.h
list adf_path_to_entry(SEXP connection, strings filename, int mode);
extern "C" SEXP _adfExplorer2_adf_path_to_entry(SEXP connection, SEXP filename, SEXP mode) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_path_to_entry(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<strings>>(filename), cpp11::as_cpp<cpp11::decay_t<int>>(mode)));
  END_CPP11
}
// file_info_adf.h
r_string adf_entry_to_path(SEXP connection, int vol_num, int sectnum, bool full);
extern "C" SEXP _adfExplorer2_adf_entry_to_path(SEXP connection, SEXP vol_num, SEXP sectnum, SEXP full) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_entry_to_path(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<int>>(vol_num), cpp11::as_cpp<cpp11::decay_t<int>>(sectnum), cpp11::as_cpp<cpp11::decay_t<bool>>(full)));
  END_CPP11
}
// file_info_adf.h
strings adf_dir_list(SEXP connection, strings filename);
extern "C" SEXP _adfExplorer2_adf_dir_list(SEXP connection, SEXP filename) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_dir_list(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<strings>>(filename)));
  END_CPP11
}
// file_info_adf.h
SEXP adf_change_dir(SEXP connection, strings path);
extern "C" SEXP _adfExplorer2_adf_change_dir(SEXP connection, SEXP path) {
  BEGIN_CPP11
    return cpp11::as_sexp(adf_change_dir(cpp11::as_cpp<cpp11::decay_t<SEXP>>(connection), cpp11::as_cpp<cpp11::decay_t<strings>>(path)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_adfExplorer2_adf_block_size",         (DL_FUNC) &_adfExplorer2_adf_block_size,         2},
    {"_adfExplorer2_adf_change_dir",         (DL_FUNC) &_adfExplorer2_adf_change_dir,         2},
    {"_adfExplorer2_adf_check_file_reg",     (DL_FUNC) &_adfExplorer2_adf_check_file_reg,     2},
    {"_adfExplorer2_adf_dev_format",         (DL_FUNC) &_adfExplorer2_adf_dev_format,         5},
    {"_adfExplorer2_adf_dev_name",           (DL_FUNC) &_adfExplorer2_adf_dev_name,           2},
    {"_adfExplorer2_adf_dev_nvol",           (DL_FUNC) &_adfExplorer2_adf_dev_nvol,           1},
    {"_adfExplorer2_adf_dev_size",           (DL_FUNC) &_adfExplorer2_adf_dev_size,           1},
    {"_adfExplorer2_adf_dev_type",           (DL_FUNC) &_adfExplorer2_adf_dev_type,           1},
    {"_adfExplorer2_adf_dir_list",           (DL_FUNC) &_adfExplorer2_adf_dir_list,           2},
    {"_adfExplorer2_adf_entry_to_path",      (DL_FUNC) &_adfExplorer2_adf_entry_to_path,      4},
    {"_adfExplorer2_adf_file_con_",          (DL_FUNC) &_adfExplorer2_adf_file_con_,          3},
    {"_adfExplorer2_adf_file_con_info",      (DL_FUNC) &_adfExplorer2_adf_file_con_info,      1},
    {"_adfExplorer2_adf_free_blocks",        (DL_FUNC) &_adfExplorer2_adf_free_blocks,        2},
    {"_adfExplorer2_adf_is_bootable",        (DL_FUNC) &_adfExplorer2_adf_is_bootable,        2},
    {"_adfExplorer2_adf_is_dircache",        (DL_FUNC) &_adfExplorer2_adf_is_dircache,        2},
    {"_adfExplorer2_adf_is_ffs",             (DL_FUNC) &_adfExplorer2_adf_is_ffs,             2},
    {"_adfExplorer2_adf_is_intl",            (DL_FUNC) &_adfExplorer2_adf_is_intl,            2},
    {"_adfExplorer2_adf_is_write_protected", (DL_FUNC) &_adfExplorer2_adf_is_write_protected, 1},
    {"_adfExplorer2_adf_path_to_entry",      (DL_FUNC) &_adfExplorer2_adf_path_to_entry,      3},
    {"_adfExplorer2_adf_upper",              (DL_FUNC) &_adfExplorer2_adf_upper,              2},
    {"_adfExplorer2_adf_vol_size",           (DL_FUNC) &_adfExplorer2_adf_vol_size,           2},
    {"_adfExplorer2_connect_adf_",           (DL_FUNC) &_adfExplorer2_connect_adf_,           2},
    {"_adfExplorer2_interpret_dir_header",   (DL_FUNC) &_adfExplorer2_interpret_dir_header,   3},
    {"_adfExplorer2_interpret_file_header",  (DL_FUNC) &_adfExplorer2_interpret_file_header,  3},
    {"_adfExplorer2_interpret_root_header",  (DL_FUNC) &_adfExplorer2_interpret_root_header,  2},
    {"_adfExplorer2_read_adf_block",         (DL_FUNC) &_adfExplorer2_read_adf_block,         2},
    {"_adfExplorer2_write_adf_block",        (DL_FUNC) &_adfExplorer2_write_adf_block,        3},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_adfExplorer2(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
